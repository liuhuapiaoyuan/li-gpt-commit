{
  "name": "li-gpt-commit",
  "displayName": "GPT Commit@Li",
  "description": "VS Code extension which helps to generate AI commit messages using ChatGPT(中文支持)",
  "version": "1.0.8",
  "homepage": "https://github.com/liuhuapiaoyuan/li-gpt-commit/#readme",
  "bugs": "https://github.com/liuhuapiaoyuan/li-gpt-commit/issues",
  "repository": {
    "type": "git",
    "url": "https://github.com/liuhuapiaoyuan/li-gpt-commit/"
  },
  "license": "MIT",
  "engines": {
    "vscode": "^1.76.0"
  },
  "publisher": "liuhuapiaoyuan",
  "categories": [
    "Other",
    "SCM Providers"
  ],
  "keywords": [
    "Commit",
    "AI",
    "ChatGPT",
    "GPT",
    "git",
    "repository"
  ],
  "icon": "assets/images/icon256.png",
  "activationEvents": [],
  "main": "./out/extension.js",
  "contributes": {
    "commands": [
      {
        "command": "gptcommit@li.generateAICommit",
        "title": "GPT生成提交信息",
        "icon": {
          "dark": "assets/icons/commit-dark.svg",
          "light": "assets/icons/commit-light.svg"
        }
      },
      {
        "command": "gptcommit@li.setOpenAIApiKey",
        "title": "Set OpenAI API key"
      }
    ],
    "menus": {
      "scm/title": [
        {
          "command": "gptcommit@li.generateAICommit",
          "when": "scmProvider == git",
          "group": "navigation"
        }
      ]
    },
    "configuration": {
      "title": "GPT Commit@Li",
      "properties": {
        "gptcommit@li.appearance.delimeter": {
          "type": "string",
          "default": "",
          "description": "Delimeter between commit lines"
        },
        "gptcommit@li.general.generator": {
          "type": "string",
          "enum": [
            "ChatGPT"
          ],
          "default": "ChatGPT",
          "description": "Generator used to create commit messages"
        },
        "gptcommit@li.general.messageApproveMethod": {
          "type": "string",
          "enum": [
            "Quick pick",
            "Message file"
          ],
          "default": "Quick pick",
          "description": "Method used to approve generated commit messages"
        },
        "gptcommit@li.general.promptType": {
          "type": "string",
          "enum": [
            "模板1",
            "模板2",
            "自定义"
          ],
          "default": "模板1",
          "description": "模板1：标准风格；模板2：gitemoji风格；自定义风格"
        },
        "gptcommit@li.general.systemPrompt": {
          "type": "string",
          "default": "\\n    You are to act as the author of a commit message in git. Your mission is to create clean and comprehensive commit messages in the conventional commit convention. I'll send you an output of 'git diff --staged' command, and you convert it into a commit message. Do not preface the commit with anything, use the present tense. Don't add any descriptions to the commit,And finally, a brief summary of the modifications made in this revision in less than 50 words ,  only commit message.Use gitmoji style before every line. Use Chinese language to answer.    \\n---\\nInput:\\ndiff --git a/src/server.ts b/src/server.ts\\nindex ad4db42..f3b18a9 100644\\n--- a/src/server.ts\\n+++ b/src/server.ts\\n@@ -10,7 +10,7 @@ import {\\n  initWinstonLogger();\\n  \\n  const app = express();\\n-const port = 7799;\\n+const PORT = 7799;\\n  \\n  app.use(express.json());\\n  \\n@@ -34,6 +34,6 @@ app.use((_, res, next) => {\\n  // ROUTES\\n  app.use(PROTECTED_ROUTER_URL, protectedRouter);\\n  \\n-app.listen(port, () => {\\n-  console.log(`Server listening on port ${port}`);\\n+app.listen(process.env.PORT || PORT, () => {\\n+  console.log(`Server listening on port ${PORT}`);\\n  });  \\n\\n  Output:\\n  :art:fix(server.ts): 修改端口变量名称从小写的 port 改为大写的 PORT\\n:sparkles:feat(server.ts): 增加环境变量： process.env.PORT\\n\\n    \\n---\\nInput: {{DIFF}}\\nOutput: \\n",
          "markdownDescription": "[需要选择自定义]自定义提示词模板,其中{{DIFF}}，会被替换成真实的git diff信息"
        },
        "gptcommit@li.openAI.apiKey": {
          "type": "string",
          "default": "",
          "description": "Needed for generating AI commit messages"
        },
        "gptcommit@li.openAI.gptVersion": {
          "type": "string",
          "enum": [
            "gpt-4",
            "gpt-4-0613",
            "gpt-4-32k",
            "gpt-4-32k-0613",
            "gpt-3.5-turbo",
            "gpt-3.5-turbo-0613",
            "gpt-3.5-turbo-16k",
            "gpt-3.5-turbo-16k-0613"
          ],
          "default": "gpt-3.5-turbo-16k",
          "description": "Version of GPT used by OpenAI"
        },
        "gptcommit@li.openAI.customEndpoint": {
          "type": "string",
          "default": "",
          "description": "自定义接口访问默认："
        },
        "gptcommit@li.openAI.temperature": {
          "type": "string",
          "default": 0.2,
          "description": "Controls randomness. Lowering results in less random completions. As the temperature approaches zero, the model will become deterministic and repetitive"
        },
        "gptcommit@li.openAI.maxTokens": {
          "type": "number",
          "default": 196,
          "description": "The maximum number of tokens to generate. Requests can use up to 2048 tokens shared between prompt and completion"
        }
      }
    }
  },
  "scripts": {
    "vscode:prepublish": "npm run esbuild-base -- --minify",
    "esbuild-base": "esbuild ./src/extension.ts --bundle --outfile=out/extension.js --external:vscode --format=cjs --platform=node",
    "build": "npm run esbuild-base -- --sourcemap",
    "watch": "npm run esbuild-base -- --sourcemap --watch",
    "lint": "eslint src --ext ts",
    "package": "pnpm vsce package -o packages",
    "package:publish": "pnpm vsce publish --no-yarn --no-dependencies"
  },
  "devDependencies": {
    "@types/glob": "^8.1.0",
    "@types/node": "16.x",
    "@types/vscode": "^1.76.0",
    "@typescript-eslint/eslint-plugin": "^5.56.0",
    "@typescript-eslint/parser": "^5.56.0",
    "@vscode/test-electron": "^2.3.0",
    "esbuild": "^0.17.14",
    "eslint": "^8.36.0",
    "glob": "^8.1.0",
    "typescript": "^4.9.5",
    "vsce": "^2.15.0"
  },
  "dependencies": {
    "execa": "^7.1.1",
    "openai": "^3.3.0",
    "zod": "^3.21.4"
  }
}